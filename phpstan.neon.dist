includes:
  - vendor/phpstan/phpstan-deprecation-rules/rules.neon
  - vendor/phpstan/phpstan-symfony/extension.neon

parameters:
  level: max
#  bootstrapFiles:
#    - vendor/mglaman/phpstan-drupal/drupal-autoloader.php
  paths:
    - src
  checkMissingIterableValueType: false
  symfony:
    container_xml_path: service.xml
#    constant_hassers: true
#    console_application_loader: null
#  excludePaths:
#    analyse:
#      - vendor
#      - web/core
#      - web/modules/contrib
#      - web/themes/contrib
#    analyseAndScan:
#      - web/sites/default/default.settings.php
#      - web/sites/default/files
#      - web/sites/simpletest
###  fileExtensions:
###    - module
###    - theme
###    - inc
###    - install
###    - profile
###    - engine
#  drupal:
#    drupal_root: '%currentWorkingDirectory%'
#    entityTypeStorageMapping:
#      node: Drupal\node\NodeStorage
#      taxonomy_term: Drupal\taxonomy\TermStorage
#      user: Drupal\user\UserStorage
##  stubFiles:
##    - stubs/Symfony/Component/EventDispatcher/EventSubscriberInterface.php

##parametersSchema:
##  drupal: structure([
##    drupal_root: string()
##    entityTypeStorageMapping: arrayOf(string())
##  ])
#rules:
#  - PHPStan\Rules\Classes\PluginManagerInspectionRule
#  - PHPStan\Rules\Drupal\Coder\DiscouragedFunctionsRule
#  - PHPStan\Rules\Drupal\GlobalDrupalDependencyInjectionRule
#  - PHPStan\Rules\Drupal\PluginManager\PluginManagerSetsCacheBackendRule
#  - PHPStan\Rules\Deprecations\AccessDeprecatedConstant

#services:
#  -
#    class: PHPStan\Type\ServiceDynamicReturnTypeExtension
#    tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
#	symfony.serviceMapFactory:
#		class: PHPStan\Symfony\ServiceMapFactory
#		factory: PHPStan\Symfony\YamlServiceMapFactory(%symfony.container_xml_path%)
#	-
#		factory: @symfony.serviceMapFactory::create()
#
#	-
#		factory: PHPStan\Type\Symfony\ServiceDynamicReturnTypeExtension(Symfony\Component\DependencyInjection\ContainerInterface, %symfony.constant_hassers%)
#		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

#  -
#    class: PHPStan\Drupal\ServiceMap
#
#  -
#    class: PHPStan\Type\EntityTypeManagerGetStorageDynamicReturnTypeExtension
#    arguments:
#      entityTypeStorageMapping: %drupal.entityTypeStorageMapping%
#    tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
#  -
#    class: PHPStan\Type\ServiceDynamicReturnTypeExtension
#    tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
#  -
#    class: PHPStan\Reflection\EntityFieldsViaMagicReflectionExtension
#    tags: [phpstan.broker.propertiesClassReflectionExtension]
#  -
#    class: PHPStan\Rules\Drupal\LoadIncludes
#    tags: [phpstan.rules.rule]
#    arguments:
#      - %drupal.drupal_root%
#  -
#    class: PHPStan\Rules\Drupal\ModuleLoadInclude
#    tags: [phpstan.rules.rule]
#    arguments:
#      - %drupal.drupal_root%
